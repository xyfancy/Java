//: ChapterThree/Ex15/Ex15.java
/****************** Ex15*****************
* Start with a number that has a binary one in the most significant position. 
* (Hint: Use a hexadecimal constant.) Use the signed right-shift operator to 
* right shift your number through all its binary positions. Display each result
* using Integer.toBinaryString().
************************************************/

import static com.github.util.Print.*;

/** This is a class created for ChapterThree Ex15
* @author xyfancy
* @author https://github.com/JavaLearningbyCSE/thinkinginjava/wiki
* @version 1.0
*/
public class Ex15 {
	/** Entry point to class and applicantion.
	* @param args array of string arguments
	*/
	public static void main(String[] args) {
		int i = 0x80000000;
		print(Integer.toBinaryString(i));
		for(int j = 0; j < 31; j++) {
			print(Integer.toBinaryString(i >>= 1));		
		}		
	}
} /* Output:
10000000000000000000000000000000
11000000000000000000000000000000
11100000000000000000000000000000
11110000000000000000000000000000
11111000000000000000000000000000
11111100000000000000000000000000
11111110000000000000000000000000
11111111000000000000000000000000
11111111100000000000000000000000
11111111110000000000000000000000
11111111111000000000000000000000
11111111111100000000000000000000
11111111111110000000000000000000
11111111111111000000000000000000
11111111111111100000000000000000
11111111111111110000000000000000
11111111111111111000000000000000
11111111111111111100000000000000
11111111111111111110000000000000
11111111111111111111000000000000
11111111111111111111100000000000
11111111111111111111110000000000
11111111111111111111111000000000
11111111111111111111111100000000
11111111111111111111111110000000
11111111111111111111111111000000
11111111111111111111111111100000
11111111111111111111111111110000
11111111111111111111111111111000
11111111111111111111111111111100
11111111111111111111111111111110
11111111111111111111111111111111
*///:~
